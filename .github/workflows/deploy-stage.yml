name: DEPLOY-TO-STAGE
run-name: Continuous deployment triggered for Stage environment

on:
  # Runs on pushes targeting the default branch
  repository_dispatch:
    types: [deploy]

jobs: 

  # Continuous delivery workflow in 'ss-pipeline' repo
  continuous-delivery:
    name: CD
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: false  
    uses: dr3dr3/ss-pipeline/.github/workflows/continuous-delivery.yml@main
    with: 
      target-deploy: 'stg'
      site-url: ${{ github.event.client_payload.site-url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    secrets: inherit

  config-deploy:
    name: Get config for Production (blue/green) deployment
    needs: [continuous-delivery]
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      stage-repo: ${{ steps.setoutput.outputs.REF }}
      site-url: ${{ steps.setoutput.outputs.URL }}
    steps:

    - name: Checkout GitOps
      uses: actions/checkout@v3
      with:
        repository: 'dr3dr3/ss-gitops'
        ref: 'main'
        token: ${{ secrets.GHA_PAT }}

    - name: Output Config
      id: setoutput
      run: |
        ref="$(yq '.repositories.deployment.blue.ref' 'repositories.yml')" || 'ERROR'
        echo "REF=$ref" >> $GITHUB_OUTPUT
        url="$(yq '.repositories.deployment.blue.site-url' 'repositories.yml')" || 'ERROR'
        echo "URL=$url" >> $GITHUB_OUTPUT

  # Dispatch to deploy to Production (Blue) environment
  dispatch:
    name: Dispatch Blue
    needs: [continuous-delivery, config-deploy]
    uses: dr3dr3/ss-pipeline/.github/workflows/deployment-dispatch.yml@main
    with:
      target-deploy: 'blue'
      site-url: ${{ needs.config-deploy.outputs.site-url }}
      target-repo: ${{ needs.config-deploy.outputs.stage-repo }}     
    secrets: inherit